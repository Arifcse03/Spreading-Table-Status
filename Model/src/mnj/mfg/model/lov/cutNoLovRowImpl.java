package mnj.mfg.model.lov;

import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Feb 01 13:22:03 PKT 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class cutNoLovRowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        CutNo {
            public Object get(cutNoLovRowImpl obj) {
                return obj.getCutNo();
            }

            public void put(cutNoLovRowImpl obj, Object value) {
                obj.setCutNo((String)value);
            }
        }
        ,
        CutNonew {
            public Object get(cutNoLovRowImpl obj) {
                return obj.getCutNonew();
            }

            public void put(cutNoLovRowImpl obj, Object value) {
                obj.setCutNonew((String)value);
            }
        }
        ,
        Ply {
            public Object get(cutNoLovRowImpl obj) {
                return obj.getPly();
            }

            public void put(cutNoLovRowImpl obj, Object value) {
                obj.setPly((Number)value);
            }
        }
        ,
        NoOfPlyN {
            public Object get(cutNoLovRowImpl obj) {
                return obj.getNoOfPlyN();
            }

            public void put(cutNoLovRowImpl obj, Object value) {
                obj.setNoOfPlyN((Number)value);
            }
        }
        ,
        RatioplanNumber {
            public Object get(cutNoLovRowImpl obj) {
                return obj.getRatioplanNumber();
            }

            public void put(cutNoLovRowImpl obj, Object value) {
                obj.setRatioplanNumber((String)value);
            }
        }
        ,
        Style {
            public Object get(cutNoLovRowImpl obj) {
                return obj.getStyle();
            }

            public void put(cutNoLovRowImpl obj, Object value) {
                obj.setStyle((String)value);
            }
        }
        ,
        Season {
            public Object get(cutNoLovRowImpl obj) {
                return obj.getSeason();
            }

            public void put(cutNoLovRowImpl obj, Object value) {
                obj.setSeason((String)value);
            }
        }
        ,
        MarkerId {
            public Object get(cutNoLovRowImpl obj) {
                return obj.getMarkerId();
            }

            public void put(cutNoLovRowImpl obj, Object value) {
                obj.setMarkerId((String)value);
            }
        }
        ,
        Yds {
            public Object get(cutNoLovRowImpl obj) {
                return obj.getYds();
            }

            public void put(cutNoLovRowImpl obj, Object value) {
                obj.setYds((String)value);
            }
        }
        ,
        Inch {
            public Object get(cutNoLovRowImpl obj) {
                return obj.getInch();
            }

            public void put(cutNoLovRowImpl obj, Object value) {
                obj.setInch((String)value);
            }
        }
        ,
        Meter {
            public Object get(cutNoLovRowImpl obj) {
                return obj.getMeter();
            }

            public void put(cutNoLovRowImpl obj, Object value) {
                obj.setMeter((String)value);
            }
        }
        ,
        MarkerPlanNumber {
            public Object get(cutNoLovRowImpl obj) {
                return obj.getMarkerPlanNumber();
            }

            public void put(cutNoLovRowImpl obj, Object value) {
                obj.setMarkerPlanNumber((String)value);
            }
        }
        ,
        NoOfPly {
            public Object get(cutNoLovRowImpl obj) {
                return obj.getNoOfPly();
            }

            public void put(cutNoLovRowImpl obj, Object value) {
                obj.setNoOfPly((Number)value);
            }
        }
        ,
        BuyerName {
            public Object get(cutNoLovRowImpl obj) {
                return obj.getBuyerName();
            }

            public void put(cutNoLovRowImpl obj, Object value) {
                obj.setBuyerName((String)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(cutNoLovRowImpl object);

        public abstract void put(cutNoLovRowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CUTNO = AttributesEnum.CutNo.index();
    public static final int CUTNONEW = AttributesEnum.CutNonew.index();
    public static final int PLY = AttributesEnum.Ply.index();
    public static final int NOOFPLYN = AttributesEnum.NoOfPlyN.index();
    public static final int RATIOPLANNUMBER = AttributesEnum.RatioplanNumber.index();
    public static final int STYLE = AttributesEnum.Style.index();
    public static final int SEASON = AttributesEnum.Season.index();
    public static final int MARKERID = AttributesEnum.MarkerId.index();
    public static final int YDS = AttributesEnum.Yds.index();
    public static final int INCH = AttributesEnum.Inch.index();
    public static final int METER = AttributesEnum.Meter.index();
    public static final int MARKERPLANNUMBER = AttributesEnum.MarkerPlanNumber.index();
    public static final int NOOFPLY = AttributesEnum.NoOfPly.index();
    public static final int BUYERNAME = AttributesEnum.BuyerName.index();

    /**
     * This is the default constructor (do not remove).
     */
    public cutNoLovRowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute CutNo.
     * @return the CutNo
     */
    public String getCutNo() {
        return (String) getAttributeInternal(CUTNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CutNo.
     * @param value value to set the  CutNo
     */
    public void setCutNo(String value) {
        setAttributeInternal(CUTNO, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CutNonew.
     * @return the CutNonew
     */
    public String getCutNonew() {
        return (String) getAttributeInternal(CUTNONEW);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CutNonew.
     * @param value value to set the  CutNonew
     */
    public void setCutNonew(String value) {
        setAttributeInternal(CUTNONEW, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Ply.
     * @return the Ply
     */
    public Number getPly() {
        return (Number) getAttributeInternal(PLY);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Ply.
     * @param value value to set the  Ply
     */
    public void setPly(Number value) {
        setAttributeInternal(PLY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute NoOfPlyN.
     * @return the NoOfPlyN
     */
    public Number getNoOfPlyN() {
        return (Number) getAttributeInternal(NOOFPLYN);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute NoOfPlyN.
     * @param value value to set the  NoOfPlyN
     */
    public void setNoOfPlyN(Number value) {
        setAttributeInternal(NOOFPLYN, value);
    }

    /**
     * Gets the attribute value for the calculated attribute NoOfPly.
     * @return the NoOfPly
     */
    public Number getNoOfPly() {
        return (Number) getAttributeInternal(NOOFPLY);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute NoOfPly.
     * @param value value to set the  NoOfPly
     */
    public void setNoOfPly(Number value) {
        setAttributeInternal(NOOFPLY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute RatioplanNumber.
     * @return the RatioplanNumber
     */
    public String getRatioplanNumber() {
        return (String) getAttributeInternal(RATIOPLANNUMBER);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute RatioplanNumber.
     * @param value value to set the  RatioplanNumber
     */
    public void setRatioplanNumber(String value) {
        setAttributeInternal(RATIOPLANNUMBER, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Style.
     * @return the Style
     */
    public String getStyle() {
        return (String) getAttributeInternal(STYLE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Style.
     * @param value value to set the  Style
     */
    public void setStyle(String value) {
        setAttributeInternal(STYLE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Season.
     * @return the Season
     */
    public String getSeason() {
        return (String) getAttributeInternal(SEASON);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Season.
     * @param value value to set the  Season
     */
    public void setSeason(String value) {
        setAttributeInternal(SEASON, value);
    }

    /**
     * Gets the attribute value for the calculated attribute MarkerId.
     * @return the MarkerId
     */
    public String getMarkerId() {
        return (String) getAttributeInternal(MARKERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute MarkerId.
     * @param value value to set the  MarkerId
     */
    public void setMarkerId(String value) {
        setAttributeInternal(MARKERID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Yds.
     * @return the Yds
     */
    public String getYds() {
        return (String) getAttributeInternal(YDS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Yds.
     * @param value value to set the  Yds
     */
    public void setYds(String value) {
        setAttributeInternal(YDS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Inch.
     * @return the Inch
     */
    public String getInch() {
        return (String) getAttributeInternal(INCH);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Inch.
     * @param value value to set the  Inch
     */
    public void setInch(String value) {
        setAttributeInternal(INCH, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Meter.
     * @return the Meter
     */
    public String getMeter() {
        return (String) getAttributeInternal(METER);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Meter.
     * @param value value to set the  Meter
     */
    public void setMeter(String value) {
        setAttributeInternal(METER, value);
    }

    /**
     * Gets the attribute value for the calculated attribute MarkerPlanNumber.
     * @return the MarkerPlanNumber
     */
    public String getMarkerPlanNumber() {
        return (String) getAttributeInternal(MARKERPLANNUMBER);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute MarkerPlanNumber.
     * @param value value to set the  MarkerPlanNumber
     */
    public void setMarkerPlanNumber(String value) {
        setAttributeInternal(MARKERPLANNUMBER, value);
    }

    /**
     * Gets the attribute value for the calculated attribute BuyerName.
     * @return the BuyerName
     */
    public String getBuyerName() {
        return (String) getAttributeInternal(BUYERNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute BuyerName.
     * @param value value to set the  BuyerName
     */
    public void setBuyerName(String value) {
        setAttributeInternal(BUYERNAME, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
