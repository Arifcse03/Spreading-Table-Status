package mnj.mfg.model.entities;

import java.sql.SQLException;

import java.util.Map;

import oracle.adf.share.ADFContext;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Feb 01 11:30:14 PKT 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class LineEOImpl extends EntityImpl {
    private static EntityDefImpl mDefinitionObject;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        DivisionId {
            public Object get(LineEOImpl obj) {
                return obj.getDivisionId();
            }

            public void put(LineEOImpl obj, Object value) {
                obj.setDivisionId((String)value);
            }
        }
        ,
        HeaderId {
            public Object get(LineEOImpl obj) {
                return obj.getHeaderId();
            }

            public void put(LineEOImpl obj, Object value) {
                obj.setHeaderId((Number)value);
            }
        }
        ,
        LineId {
            public Object get(LineEOImpl obj) {
                return obj.getLineId();
            }

            public void put(LineEOImpl obj, Object value) {
                obj.setLineId((Number)value);
            }
        }
        ,
        BuyerId {
            public Object get(LineEOImpl obj) {
                return obj.getBuyerId();
            }

            public void put(LineEOImpl obj, Object value) {
                obj.setBuyerId((Number)value);
            }
        }
        ,
        CutNumber {
            public Object get(LineEOImpl obj) {
                return obj.getCutNumber();
            }

            public void put(LineEOImpl obj, Object value) {
                obj.setCutNumber((String)value);
            }
        }
        ,
        NoOfPly {
            public Object get(LineEOImpl obj) {
                return obj.getNoOfPly();
            }

            public void put(LineEOImpl obj, Object value) {
                obj.setNoOfPly((String)value);
            }
        }
        ,
        AutoManual {
            public Object get(LineEOImpl obj) {
                return obj.getAutoManual();
            }

            public void put(LineEOImpl obj, Object value) {
                obj.setAutoManual((String)value);
            }
        }
        ,
        StartTime {
            public Object get(LineEOImpl obj) {
                return obj.getStartTime();
            }

            public void put(LineEOImpl obj, Object value) {
                obj.setStartTime((Date)value);
            }
        }
        ,
        EndTime {
            public Object get(LineEOImpl obj) {
                return obj.getEndTime();
            }

            public void put(LineEOImpl obj, Object value) {
                obj.setEndTime((Date)value);
            }
        }
        ,
        MarkerId {
            public Object get(LineEOImpl obj) {
                return obj.getMarkerId();
            }

            public void put(LineEOImpl obj, Object value) {
                obj.setMarkerId((String)value);
            }
        }
        ,
        PlanYds {
            public Object get(LineEOImpl obj) {
                return obj.getPlanYds();
            }

            public void put(LineEOImpl obj, Object value) {
                obj.setPlanYds((String)value);
            }
        }
        ,
        PlanInch {
            public Object get(LineEOImpl obj) {
                return obj.getPlanInch();
            }

            public void put(LineEOImpl obj, Object value) {
                obj.setPlanInch((String)value);
            }
        }
        ,
        PlanMeter {
            public Object get(LineEOImpl obj) {
                return obj.getPlanMeter();
            }

            public void put(LineEOImpl obj, Object value) {
                obj.setPlanMeter((String)value);
            }
        }
        ,
        ActualYds {
            public Object get(LineEOImpl obj) {
                return obj.getActualYds();
            }

            public void put(LineEOImpl obj, Object value) {
                obj.setActualYds((String)value);
            }
        }
        ,
        ActualInch {
            public Object get(LineEOImpl obj) {
                return obj.getActualInch();
            }

            public void put(LineEOImpl obj, Object value) {
                obj.setActualInch((String)value);
            }
        }
        ,
        ActualMeter {
            public Object get(LineEOImpl obj) {
                return obj.getActualMeter();
            }

            public void put(LineEOImpl obj, Object value) {
                obj.setActualMeter((String)value);
            }
        }
        ,
        TimeCal {
            public Object get(LineEOImpl obj) {
                return obj.getTimeCal();
            }

            public void put(LineEOImpl obj, Object value) {
                obj.setTimeCal((String)value);
            }
        }
        ,
        UsedTimeInMinutes {
            public Object get(LineEOImpl obj) {
                return obj.getUsedTimeInMinutes();
            }

            public void put(LineEOImpl obj, Object value) {
                obj.setUsedTimeInMinutes((Date)value);
            }
        }
        ,
        Remarks {
            public Object get(LineEOImpl obj) {
                return obj.getRemarks();
            }

            public void put(LineEOImpl obj, Object value) {
                obj.setRemarks((String)value);
            }
        }
        ,
        LastUpdateDate {
            public Object get(LineEOImpl obj) {
                return obj.getLastUpdateDate();
            }

            public void put(LineEOImpl obj, Object value) {
                obj.setLastUpdateDate((Date)value);
            }
        }
        ,
        LastUpdatedBy {
            public Object get(LineEOImpl obj) {
                return obj.getLastUpdatedBy();
            }

            public void put(LineEOImpl obj, Object value) {
                obj.setLastUpdatedBy((Number)value);
            }
        }
        ,
        CreationDate {
            public Object get(LineEOImpl obj) {
                return obj.getCreationDate();
            }

            public void put(LineEOImpl obj, Object value) {
                obj.setCreationDate((Date)value);
            }
        }
        ,
        CreatedBy {
            public Object get(LineEOImpl obj) {
                return obj.getCreatedBy();
            }

            public void put(LineEOImpl obj, Object value) {
                obj.setCreatedBy((Number)value);
            }
        }
        ,
        LastUpdateLogin {
            public Object get(LineEOImpl obj) {
                return obj.getLastUpdateLogin();
            }

            public void put(LineEOImpl obj, Object value) {
                obj.setLastUpdateLogin((Number)value);
            }
        }
        ,
        Attribute1 {
            public Object get(LineEOImpl obj) {
                return obj.getAttribute1();
            }

            public void put(LineEOImpl obj, Object value) {
                obj.setAttribute1((String)value);
            }
        }
        ,
        Attribute2 {
            public Object get(LineEOImpl obj) {
                return obj.getAttribute2();
            }

            public void put(LineEOImpl obj, Object value) {
                obj.setAttribute2((String)value);
            }
        }
        ,
        Attribute3 {
            public Object get(LineEOImpl obj) {
                return obj.getAttribute3();
            }

            public void put(LineEOImpl obj, Object value) {
                obj.setAttribute3((String)value);
            }
        }
        ,
        Attribute4 {
            public Object get(LineEOImpl obj) {
                return obj.getAttribute4();
            }

            public void put(LineEOImpl obj, Object value) {
                obj.setAttribute4((String)value);
            }
        }
        ,
        Attribute5 {
            public Object get(LineEOImpl obj) {
                return obj.getAttribute5();
            }

            public void put(LineEOImpl obj, Object value) {
                obj.setAttribute5((String)value);
            }
        }
        ,
        Attribute6 {
            public Object get(LineEOImpl obj) {
                return obj.getAttribute6();
            }

            public void put(LineEOImpl obj, Object value) {
                obj.setAttribute6((String)value);
            }
        }
        ,
        Attribute7 {
            public Object get(LineEOImpl obj) {
                return obj.getAttribute7();
            }

            public void put(LineEOImpl obj, Object value) {
                obj.setAttribute7((String)value);
            }
        }
        ,
        Attribute8 {
            public Object get(LineEOImpl obj) {
                return obj.getAttribute8();
            }

            public void put(LineEOImpl obj, Object value) {
                obj.setAttribute8((String)value);
            }
        }
        ,
        Attribute9 {
            public Object get(LineEOImpl obj) {
                return obj.getAttribute9();
            }

            public void put(LineEOImpl obj, Object value) {
                obj.setAttribute9((String)value);
            }
        }
        ,
        Attribute10 {
            public Object get(LineEOImpl obj) {
                return obj.getAttribute10();
            }

            public void put(LineEOImpl obj, Object value) {
                obj.setAttribute10((String)value);
            }
        }
        ,
        Attribute11 {
            public Object get(LineEOImpl obj) {
                return obj.getAttribute11();
            }

            public void put(LineEOImpl obj, Object value) {
                obj.setAttribute11((String)value);
            }
        }
        ,
        Attribute12 {
            public Object get(LineEOImpl obj) {
                return obj.getAttribute12();
            }

            public void put(LineEOImpl obj, Object value) {
                obj.setAttribute12((String)value);
            }
        }
        ,
        Attribute13 {
            public Object get(LineEOImpl obj) {
                return obj.getAttribute13();
            }

            public void put(LineEOImpl obj, Object value) {
                obj.setAttribute13((String)value);
            }
        }
        ,
        Attribute14 {
            public Object get(LineEOImpl obj) {
                return obj.getAttribute14();
            }

            public void put(LineEOImpl obj, Object value) {
                obj.setAttribute14((String)value);
            }
        }
        ,
        Attribute15 {
            public Object get(LineEOImpl obj) {
                return obj.getAttribute15();
            }

            public void put(LineEOImpl obj, Object value) {
                obj.setAttribute15((String)value);
            }
        }
        ,
        Inches {
            public Object get(LineEOImpl obj) {
                return obj.getInches();
            }

            public void put(LineEOImpl obj, Object value) {
                obj.setInches((Number)value);
            }
        }
        ,
        Yards {
            public Object get(LineEOImpl obj) {
                return obj.getYards();
            }

            public void put(LineEOImpl obj, Object value) {
                obj.setYards((Number)value);
            }
        }
        ,
        HeaderEO {
            public Object get(LineEOImpl obj) {
                return obj.getHeaderEO();
            }

            public void put(LineEOImpl obj, Object value) {
                obj.setHeaderEO((HeaderEOImpl)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(LineEOImpl object);

        public abstract void put(LineEOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int DIVISIONID = AttributesEnum.DivisionId.index();
    public static final int HEADERID = AttributesEnum.HeaderId.index();
    public static final int LINEID = AttributesEnum.LineId.index();
    public static final int BUYERID = AttributesEnum.BuyerId.index();
    public static final int CUTNUMBER = AttributesEnum.CutNumber.index();
    public static final int NOOFPLY = AttributesEnum.NoOfPly.index();
    public static final int AUTOMANUAL = AttributesEnum.AutoManual.index();
    public static final int STARTTIME = AttributesEnum.StartTime.index();
    public static final int ENDTIME = AttributesEnum.EndTime.index();
    public static final int MARKERID = AttributesEnum.MarkerId.index();
    public static final int PLANYDS = AttributesEnum.PlanYds.index();
    public static final int PLANINCH = AttributesEnum.PlanInch.index();
    public static final int PLANMETER = AttributesEnum.PlanMeter.index();
    public static final int ACTUALYDS = AttributesEnum.ActualYds.index();
    public static final int ACTUALINCH = AttributesEnum.ActualInch.index();
    public static final int ACTUALMETER = AttributesEnum.ActualMeter.index();
    public static final int TIMECAL = AttributesEnum.TimeCal.index();
    public static final int USEDTIMEINMINUTES = AttributesEnum.UsedTimeInMinutes.index();
    public static final int REMARKS = AttributesEnum.Remarks.index();
    public static final int LASTUPDATEDATE = AttributesEnum.LastUpdateDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int LASTUPDATELOGIN = AttributesEnum.LastUpdateLogin.index();
    public static final int ATTRIBUTE1 = AttributesEnum.Attribute1.index();
    public static final int ATTRIBUTE2 = AttributesEnum.Attribute2.index();
    public static final int ATTRIBUTE3 = AttributesEnum.Attribute3.index();
    public static final int ATTRIBUTE4 = AttributesEnum.Attribute4.index();
    public static final int ATTRIBUTE5 = AttributesEnum.Attribute5.index();
    public static final int ATTRIBUTE6 = AttributesEnum.Attribute6.index();
    public static final int ATTRIBUTE7 = AttributesEnum.Attribute7.index();
    public static final int ATTRIBUTE8 = AttributesEnum.Attribute8.index();
    public static final int ATTRIBUTE9 = AttributesEnum.Attribute9.index();
    public static final int ATTRIBUTE10 = AttributesEnum.Attribute10.index();
    public static final int ATTRIBUTE11 = AttributesEnum.Attribute11.index();
    public static final int ATTRIBUTE12 = AttributesEnum.Attribute12.index();
    public static final int ATTRIBUTE13 = AttributesEnum.Attribute13.index();
    public static final int ATTRIBUTE14 = AttributesEnum.Attribute14.index();
    public static final int ATTRIBUTE15 = AttributesEnum.Attribute15.index();
    public static final int INCHES = AttributesEnum.Inches.index();
    public static final int YARDS = AttributesEnum.Yards.index();
    public static final int HEADEREO = AttributesEnum.HeaderEO.index();

    /**
     * This is the default constructor (do not remove).
     */
    public LineEOImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("mnj.mfg.model.entities.LineEO");
        }
        return mDefinitionObject;
    }

    /**
     * Gets the attribute value for DivisionId, using the alias name DivisionId.
     * @return the DivisionId
     */
    public String getDivisionId() {
        return (String)getAttributeInternal(DIVISIONID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DivisionId.
     * @param value value to set the DivisionId
     */
    public void setDivisionId(String value) {
        setAttributeInternal(DIVISIONID, value);
    }

    /**
     * Gets the attribute value for HeaderId, using the alias name HeaderId.
     * @return the HeaderId
     */
    public Number getHeaderId() {
        return (Number)getAttributeInternal(HEADERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for HeaderId.
     * @param value value to set the HeaderId
     */
    public void setHeaderId(Number value) {
        setAttributeInternal(HEADERID, value);
    }

    /**
     * Gets the attribute value for LineId, using the alias name LineId.
     * @return the LineId
     */
    public Number getLineId() {
        return (Number)getAttributeInternal(LINEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for LineId.
     * @param value value to set the LineId
     */
    public void setLineId(Number value) {
        setAttributeInternal(LINEID, value);
    }

    /**
     * Gets the attribute value for BuyerId, using the alias name BuyerId.
     * @return the BuyerId
     */
    public Number getBuyerId() {
        return (Number)getAttributeInternal(BUYERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for BuyerId.
     * @param value value to set the BuyerId
     */
    public void setBuyerId(Number value) {
        setAttributeInternal(BUYERID, value);
    }

    /**
     * Gets the attribute value for CutNumber, using the alias name CutNumber.
     * @return the CutNumber
     */
    public String getCutNumber() {
        return (String)getAttributeInternal(CUTNUMBER);
    }

    /**
     * Sets <code>value</code> as the attribute value for CutNumber.
     * @param value value to set the CutNumber
     */
    public void setCutNumber(String value) {
        setAttributeInternal(CUTNUMBER, value);
    }

    /**
     * Gets the attribute value for NoOfPly, using the alias name NoOfPly.
     * @return the NoOfPly
     */
    public String getNoOfPly() {
        return (String)getAttributeInternal(NOOFPLY);
    }

    /**
     * Sets <code>value</code> as the attribute value for NoOfPly.
     * @param value value to set the NoOfPly
     */
    public void setNoOfPly(String value) {
        setAttributeInternal(NOOFPLY, value);
    }

    /**
     * Gets the attribute value for AutoManual, using the alias name AutoManual.
     * @return the AutoManual
     */
    public String getAutoManual() {
        return (String)getAttributeInternal(AUTOMANUAL);
    }

    /**
     * Sets <code>value</code> as the attribute value for AutoManual.
     * @param value value to set the AutoManual
     */
    public void setAutoManual(String value) {
        setAttributeInternal(AUTOMANUAL, value);
    }

    /**
     * Gets the attribute value for StartTime, using the alias name StartTime.
     * @return the StartTime
     */
    public Date getStartTime() {
        return (Date)getAttributeInternal(STARTTIME);
    }

    /**
     * Sets <code>value</code> as the attribute value for StartTime.
     * @param value value to set the StartTime
     */
    public void setStartTime(Date value) {
        setAttributeInternal(STARTTIME, value);
    }

    /**
     * Gets the attribute value for EndTime, using the alias name EndTime.
     * @return the EndTime
     */
    public Date getEndTime() {
        return (Date)getAttributeInternal(ENDTIME);
    }

    /**
     * Sets <code>value</code> as the attribute value for EndTime.
     * @param value value to set the EndTime
     */
    public void setEndTime(Date value) {
        setAttributeInternal(ENDTIME, value);
    }

    /**
     * Gets the attribute value for MarkerId, using the alias name MarkerId.
     * @return the MarkerId
     */
    public String getMarkerId() {
        return (String)getAttributeInternal(MARKERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for MarkerId.
     * @param value value to set the MarkerId
     */
    public void setMarkerId(String value) {
        setAttributeInternal(MARKERID, value);
    }

    /**
     * Gets the attribute value for PlanYds, using the alias name PlanYds.
     * @return the PlanYds
     */
    public String getPlanYds() {
        return (String)getAttributeInternal(PLANYDS);
    }

    /**
     * Sets <code>value</code> as the attribute value for PlanYds.
     * @param value value to set the PlanYds
     */
    public void setPlanYds(String value) {
        setAttributeInternal(PLANYDS, value);
    }

    /**
     * Gets the attribute value for PlanInch, using the alias name PlanInch.
     * @return the PlanInch
     */
    public String getPlanInch() {
        return (String)getAttributeInternal(PLANINCH);
    }

    /**
     * Sets <code>value</code> as the attribute value for PlanInch.
     * @param value value to set the PlanInch
     */
    public void setPlanInch(String value) {
        setAttributeInternal(PLANINCH, value);
    }

    /**
     * Gets the attribute value for PlanMeter, using the alias name PlanMeter.
     * @return the PlanMeter
     */
    public String getPlanMeter() {
        return (String)getAttributeInternal(PLANMETER);
    }

    /**
     * Sets <code>value</code> as the attribute value for PlanMeter.
     * @param value value to set the PlanMeter
     */
    public void setPlanMeter(String value) {
        setAttributeInternal(PLANMETER, value);
    }

    /**
     * Gets the attribute value for ActualYds, using the alias name ActualYds.
     * @return the ActualYds
     */
    public String getActualYds() {
        return (String)getAttributeInternal(ACTUALYDS);
    }

    /**
     * Sets <code>value</code> as the attribute value for ActualYds.
     * @param value value to set the ActualYds
     */
    public void setActualYds(String value) {
        setAttributeInternal(ACTUALYDS, value);
    }

    /**
     * Gets the attribute value for ActualInch, using the alias name ActualInch.
     * @return the ActualInch
     */
    public String getActualInch() {
        return (String)getAttributeInternal(ACTUALINCH);
    }

    /**
     * Sets <code>value</code> as the attribute value for ActualInch.
     * @param value value to set the ActualInch
     */
    public void setActualInch(String value) {
        setAttributeInternal(ACTUALINCH, value);
    }

    /**
     * Gets the attribute value for ActualMeter, using the alias name ActualMeter.
     * @return the ActualMeter
     */
    public String getActualMeter() {
        return (String)getAttributeInternal(ACTUALMETER);
    }

    /**
     * Sets <code>value</code> as the attribute value for ActualMeter.
     * @param value value to set the ActualMeter
     */
    public void setActualMeter(String value) {
        setAttributeInternal(ACTUALMETER, value);
    }

    /**
     * Gets the attribute value for TimeCal, using the alias name TimeCal.
     * @return the TimeCal
     */
    public String getTimeCal() {
        return (String)getAttributeInternal(TIMECAL);
    }

    /**
     * Sets <code>value</code> as the attribute value for TimeCal.
     * @param value value to set the TimeCal
     */
    public void setTimeCal(String value) {
        setAttributeInternal(TIMECAL, value);
    }

    /**
     * Gets the attribute value for UsedTimeInMinutes, using the alias name UsedTimeInMinutes.
     * @return the UsedTimeInMinutes
     */
    public Date getUsedTimeInMinutes() {
        return (Date)getAttributeInternal(USEDTIMEINMINUTES);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsedTimeInMinutes.
     * @param value value to set the UsedTimeInMinutes
     */
    public void setUsedTimeInMinutes(Date value) {
        setAttributeInternal(USEDTIMEINMINUTES, value);
    }

    /**
     * Gets the attribute value for Remarks, using the alias name Remarks.
     * @return the Remarks
     */
    public String getRemarks() {
        return (String)getAttributeInternal(REMARKS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Remarks.
     * @param value value to set the Remarks
     */
    public void setRemarks(String value) {
        setAttributeInternal(REMARKS, value);
    }

    /**
     * Gets the attribute value for LastUpdateDate, using the alias name LastUpdateDate.
     * @return the LastUpdateDate
     */
    public Date getLastUpdateDate() {
        return (Date)getAttributeInternal(LASTUPDATEDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdateDate.
     * @param value value to set the LastUpdateDate
     */
    public void setLastUpdateDate(Date value) {
        setAttributeInternal(LASTUPDATEDATE, value);
    }

    /**
     * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy.
     * @return the LastUpdatedBy
     */
    public Number getLastUpdatedBy() {
        return (Number)getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedBy.
     * @param value value to set the LastUpdatedBy
     */
    public void setLastUpdatedBy(Number value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**
     * Gets the attribute value for CreationDate, using the alias name CreationDate.
     * @return the CreationDate
     */
    public Date getCreationDate() {
        return (Date)getAttributeInternal(CREATIONDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreationDate.
     * @param value value to set the CreationDate
     */
    public void setCreationDate(Date value) {
        setAttributeInternal(CREATIONDATE, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the CreatedBy
     */
    public Number getCreatedBy() {
        return (Number)getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(Number value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for LastUpdateLogin, using the alias name LastUpdateLogin.
     * @return the LastUpdateLogin
     */
    public Number getLastUpdateLogin() {
        return (Number)getAttributeInternal(LASTUPDATELOGIN);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdateLogin.
     * @param value value to set the LastUpdateLogin
     */
    public void setLastUpdateLogin(Number value) {
        setAttributeInternal(LASTUPDATELOGIN, value);
    }

    /**
     * Gets the attribute value for Attribute1, using the alias name Attribute1.
     * @return the Attribute1
     */
    public String getAttribute1() {
        return (String)getAttributeInternal(ATTRIBUTE1);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute1.
     * @param value value to set the Attribute1
     */
    public void setAttribute1(String value) {
        setAttributeInternal(ATTRIBUTE1, value);
    }

    /**
     * Gets the attribute value for Attribute2, using the alias name Attribute2.
     * @return the Attribute2
     */
    public String getAttribute2() {
        return (String)getAttributeInternal(ATTRIBUTE2);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute2.
     * @param value value to set the Attribute2
     */
    public void setAttribute2(String value) {
        setAttributeInternal(ATTRIBUTE2, value);
    }

    /**
     * Gets the attribute value for Attribute3, using the alias name Attribute3.
     * @return the Attribute3
     */
    public String getAttribute3() {
        return (String)getAttributeInternal(ATTRIBUTE3);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute3.
     * @param value value to set the Attribute3
     */
    public void setAttribute3(String value) {
        setAttributeInternal(ATTRIBUTE3, value);
    }

    /**
     * Gets the attribute value for Attribute4, using the alias name Attribute4.
     * @return the Attribute4
     */
    public String getAttribute4() {
        return (String)getAttributeInternal(ATTRIBUTE4);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute4.
     * @param value value to set the Attribute4
     */
    public void setAttribute4(String value) {
        setAttributeInternal(ATTRIBUTE4, value);
    }

    /**
     * Gets the attribute value for Attribute5, using the alias name Attribute5.
     * @return the Attribute5
     */
    public String getAttribute5() {
        return (String)getAttributeInternal(ATTRIBUTE5);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute5.
     * @param value value to set the Attribute5
     */
    public void setAttribute5(String value) {
        setAttributeInternal(ATTRIBUTE5, value);
    }

    /**
     * Gets the attribute value for Attribute6, using the alias name Attribute6.
     * @return the Attribute6
     */
    public String getAttribute6() {
        return (String)getAttributeInternal(ATTRIBUTE6);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute6.
     * @param value value to set the Attribute6
     */
    public void setAttribute6(String value) {
        setAttributeInternal(ATTRIBUTE6, value);
    }

    /**
     * Gets the attribute value for Attribute7, using the alias name Attribute7.
     * @return the Attribute7
     */
    public String getAttribute7() {
        return (String)getAttributeInternal(ATTRIBUTE7);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute7.
     * @param value value to set the Attribute7
     */
    public void setAttribute7(String value) {
        setAttributeInternal(ATTRIBUTE7, value);
    }

    /**
     * Gets the attribute value for Attribute8, using the alias name Attribute8.
     * @return the Attribute8
     */
    public String getAttribute8() {
        return (String)getAttributeInternal(ATTRIBUTE8);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute8.
     * @param value value to set the Attribute8
     */
    public void setAttribute8(String value) {
        setAttributeInternal(ATTRIBUTE8, value);
    }

    /**
     * Gets the attribute value for Attribute9, using the alias name Attribute9.
     * @return the Attribute9
     */
    public String getAttribute9() {
        return (String)getAttributeInternal(ATTRIBUTE9);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute9.
     * @param value value to set the Attribute9
     */
    public void setAttribute9(String value) {
        setAttributeInternal(ATTRIBUTE9, value);
    }

    /**
     * Gets the attribute value for Attribute10, using the alias name Attribute10.
     * @return the Attribute10
     */
    public String getAttribute10() {
        return (String)getAttributeInternal(ATTRIBUTE10);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute10.
     * @param value value to set the Attribute10
     */
    public void setAttribute10(String value) {
        setAttributeInternal(ATTRIBUTE10, value);
    }

    /**
     * Gets the attribute value for Attribute11, using the alias name Attribute11.
     * @return the Attribute11
     */
    public String getAttribute11() {
        return (String)getAttributeInternal(ATTRIBUTE11);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute11.
     * @param value value to set the Attribute11
     */
    public void setAttribute11(String value) {
        setAttributeInternal(ATTRIBUTE11, value);
    }

    /**
     * Gets the attribute value for Attribute12, using the alias name Attribute12.
     * @return the Attribute12
     */
    public String getAttribute12() {
        return (String)getAttributeInternal(ATTRIBUTE12);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute12.
     * @param value value to set the Attribute12
     */
    public void setAttribute12(String value) {
        setAttributeInternal(ATTRIBUTE12, value);
    }

    /**
     * Gets the attribute value for Attribute13, using the alias name Attribute13.
     * @return the Attribute13
     */
    public String getAttribute13() {
        return (String)getAttributeInternal(ATTRIBUTE13);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute13.
     * @param value value to set the Attribute13
     */
    public void setAttribute13(String value) {
        setAttributeInternal(ATTRIBUTE13, value);
    }

    /**
     * Gets the attribute value for Attribute14, using the alias name Attribute14.
     * @return the Attribute14
     */
    public String getAttribute14() {
        return (String)getAttributeInternal(ATTRIBUTE14);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute14.
     * @param value value to set the Attribute14
     */
    public void setAttribute14(String value) {
        setAttributeInternal(ATTRIBUTE14, value);
    }

    /**
     * Gets the attribute value for Attribute15, using the alias name Attribute15.
     * @return the Attribute15
     */
    public String getAttribute15() {
        return (String)getAttributeInternal(ATTRIBUTE15);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute15.
     * @param value value to set the Attribute15
     */
    public void setAttribute15(String value) {
        setAttributeInternal(ATTRIBUTE15, value);
    }

    /**
     * Gets the attribute value for Inches, using the alias name Inches.
     * @return the Inches
     */
    public Number getInches() {
        return (Number)getAttributeInternal(INCHES);
    }

    /**
     * Sets <code>value</code> as the attribute value for Inches.
     * @param value value to set the Inches
     */
    public void setInches(Number value) {
        setAttributeInternal(INCHES, value);
    }

    /**
     * Gets the attribute value for Yards, using the alias name Yards.
     * @return the Yards
     */
    public Number getYards() {
        return (Number)getAttributeInternal(YARDS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Yards.
     * @param value value to set the Yards
     */
    public void setYards(Number value) {
        setAttributeInternal(YARDS, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity HeaderEOImpl.
     */
    public HeaderEOImpl getHeaderEO() {
        return (HeaderEOImpl)getAttributeInternal(HEADEREO);
    }

    /**
     * Sets <code>value</code> as the associated entity HeaderEOImpl.
     */
    public void setHeaderEO(HeaderEOImpl value) {
        setAttributeInternal(HEADEREO, value);
    }


    /**
     * @param lineId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number lineId) {
        return new Key(new Object[]{lineId});
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
     protected void create(AttributeList attributeList) {
         super.create(attributeList);
         oracle.jbo.server.SequenceImpl s =new oracle.jbo.server.SequenceImpl("MNJ_MFG_SPREADING_T_L_S",getDBTransaction());
         oracle.jbo.domain.Number sVal = s.getSequenceNumber();
         setLineId(sVal);
     }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

     /**
         * Custom DML update/insert/delete logic here.
         * @param operation the operation type
         * @param e the transaction event
         */
        protected void doDML(int operation, TransactionEvent e) {
            Map sessionScope = ADFContext.getCurrent().getSessionScope();   
            String user = (String)sessionScope.get("userId");
            String orgId  =(String)sessionScope.get("orgId");
            String unitName  =(String)sessionScope.get("unitName");
            
            System.out.println("ASSES INS DO DML 1 ------------------>"+user);
            System.out.println("ASSES INS DO DML 2------------------>"+orgId);
            System.out.println("ASSES INS DML 3 ------------------>"+unitName);
            
            if(DML_UPDATE == operation){
                      try {
                          
                          setLastUpdateDate((Date)Date.getCurrentDate()); 
                          setLastUpdatedBy(new oracle.jbo.domain.Number(user));
                      } catch (SQLException f) {
                          System.out.println(f.getMessage());
                      }
                  }
                  else if (DML_INSERT == operation){
                   
                      try {
                          
                          //setHeaderNo(getSrNoString());
                          //setOrgId(new oracle.jbo.domain.Number(orgId));
                          //setAttribute1(unitName);
                          setCreationDate((Date)Date.getCurrentDate());  
                          setCreatedBy(new oracle.jbo.domain.Number(user));
                         
                         
                         
                      } catch (SQLException f) {
                          ;
                      }
                  } 
            
            super.doDML(operation, e);
        }

}
